function [data_out, R] = regcorr(data_in, info, hem)

% REGCORR Performs regression correction by wavelengths.
%
%   [data_out, R] = REGCORR(data_in, info, hem) takes a light-level data
%   array "data_in" of the format MEAS x TIME, and using the scan metadata
%   in "info.pairs" and a WL x MEAS "hem" array generated by GETHEM,
%   performs a regression correction for each wavelength of the data, which
%   is returned in the MEAS x TIME array "data_out". The corresponding
%   correlation coefficients for each measurement are returned in "R" as a
%   MEAS x 1 array.
%
%   If y_{r} is the signal to be regressed out and y_{in} is a data
%   time trace (either source-detector or imaged), then the output
%   is the least-squares regression: 
%   y_{out} = y_{in} - y_{r}(<y_{in},y_{r}>/|y_{r}|^2). 
%   Additionally, the correlation coefficient is given by: 
%   R=(<y_{in},y_{r}>/(|y_{in}|*|y_{r}|)).
%
% See Also: GETHEM, DETREND_TTS.

%% Parameters and Initialization.
[Nm, Nt] = size(data_in);
cs = unique(info.pairs.WL); % WLs.
Nc = length(cs); % Number of WLs.
data_out = zeros(Nm, Nt);
R = zeros(Nm, 1);

%% Regression correction.
for k = 1:Nc
    keep = info.pairs.WL == cs(k); % get current color
    temp = data_in(keep, :)';
    
    g = hem(k, :)'; % regressor/noise signal in correct orientation
    gp = pinv(g);
    beta = gp * temp;
    data_out(keep, :) = (temp - g * beta)'; % linear regression
    R(keep) = normr(g') * normc(temp); % correlation coefficient
end



%
